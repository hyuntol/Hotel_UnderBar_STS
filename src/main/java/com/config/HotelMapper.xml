<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="HotelMapper">
<select id="hotelList" parameterType="string" resultType="HotelDTO" >
	select * from hotel
</select>

<select id="hotelLoc" parameterType="string" resultType="HotelDTO">
	select * from hotel where place= #{location}
</select>

<select id="totalCount" parameterType="string" resultType="int">
	select count(*) from hotel where place= #{location}
</select>
<select id="totalCount1" parameterType="string" resultType="int">
	select count(*) from hotel
</select>

<select id="roomList" resultType="RoomDTO" parameterType="string">
	select * from room where hotelseq=#{seq}
</select>


<!-- 호텔리스트 검색 기능  -->
<select id="searchKey" parameterType="string" resultType="HotelDTO">
	select * from hotel where place = #{place}
</select>

<!-- 룸 info select-->
<select id="roomInfo" resultType="RoomInfoDTO" parameterType="string">
select * from roominfo where r_seq=#{seq} order by r_seq
</select>

<select id="roomList2" resultType="RoomDTO" parameterType="string">
	select * from room where seq=#{seq}
</select>

<select id="date" resultType="int" parameterType="hashmap">
	select COUNT(*) from resv
	where roomseq = #{roomseq} and checkin = TO_DATE(#{checkin})
</select>

<select id="rating" resultType="RatingDTO">
select hotelname,round(avg(rating),2) rating from review group by hotelname
</select>
<!-- 룸 최대 인원수 가져오기 -->
<select id="selectMaxGuest" parameterType="string" resultType="int">
select max_guest from room where seq =#{roomseq}
</select>
<!-- 룸 최대 인원수 가져오기 -->

<!-- 호텔 정보 삭제 -->
<delete id="HotelDelete" parameterType="String">
delete from hotel where seq = #{seq}
</delete>
<!-- 호텔 정보 삭제 -->

<!-- 호텔 정보 가져오기 -->
<select id="hotelSelect" parameterType="string"  resultType="HotelDTO">
select * from hotel where seq = #{seq}
</select>
<!-- 호텔 정보 가져오기 -->
<update id="hotelUpdate" parameterType="HotelUpdateDTO">
update hotel set
     name = #{name},
     place = #{place},
     addr = #{addr},
     hotel_img = #{hotel_img}
    where seq = #{seq}
</update>

<select id="hotelInsertGO" resultType="int">
select SEQ_HOTEL.nextval from dual
</select>

<insert id="hotelInsert" parameterType="HotelInsertDTO">
insert into hotel (seq, name, place, addr, rating, hotel_img, hotel_img_real) 
 values (seq_hotel.nextval, #{name}, #{place}, #{addr}, 0, #{hotel_img}, null)
</insert>

<!-- 객실 관리  -->

<!-- 객실 리스트 페이징 -->
<select id="roomListpage" resultType="RoomDTO" parameterType="string">
	select * from room where hotelseq = #{seq}
</select>

<select id="RoomtotalCount" parameterType="string" resultType="int">
		select count(*) from room where hotelseq = #{seq}
</select>
<!-- 객실 리스트 페이징 -->


<!-- 객실 삭제 -->
<delete id="RoomDelete" parameterType="String">
delete from room where seq = #{seq}
</delete>
<!-- 객실 삭제 -->

<!-- 객실 정보 가져오기 -->
<select id="roomSelect" parameterType="string"  resultType="RoomDTO">
select * from room where seq = #{seq}
</select>
<!-- 객실 정보 가져오기 -->

<!-- 객실 수정 -->
<update id="RoomUpdate" parameterType="RoomUpdateDTO">
update room set
     name = #{name},
     price = #{price},
     max_guest = #{max_guest},
     room_img = #{room_img}
    where seq = #{seq}
</update>
<!-- 객실 seq 가져오기 -->
<select id="roomInsertGo" resultType="int">
select SEQ_ROOM.nextval from dual
</select>
<!-- 객실 seq 가져오기 -->
<!-- 객실 추가 -->
<insert id="roomInsert" parameterType="RoomInsertDTO">
insert into room (seq, name, hotelseq, price, max_guest, room_img, room_img_real) 
 values (seq_room.nextval, #{name}, #{hotelseq}, #{price}, #{max_guest}, #{room_img}, #{room_img_real})
</insert>
<!-- 객실 추가 -->
<!-- 객실 자세한 정보 추가 -->
<insert id="roomInfoInsert" parameterType="RoomInfoDTO">
insert into roominfo (r_seq, bath, eat, internet, etc) 
 values (#{r_seq}, #{bath}, #{eat}, #{internet}, #{etc})
</insert>
<!-- 객실 자세한 정보 추가 -->
<!-- 객실 관리  -->
<select id="reserved" parameterType="hashmap" resultType="int">
	select count(*) from resv where roomseq = #{roomseq} and checkin = #{checkin}
	</select>
</mapper>
