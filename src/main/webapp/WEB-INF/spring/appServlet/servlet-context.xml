<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
<mvc:annotation-driven></mvc:annotation-driven><!-- mvc기본태그 -->
<mvc:default-servlet-handler/><!-- mvc기본태그 -->
<!-- 직접 주소요청시 처리 페이지 등록 부분 -->
<mvc:view-controller path="/" view-name="main"/><!-- main.jsp => mainController에서 처리 -->
<mvc:view-controller path="/boardList" view-name="boardList"/>
<mvc:view-controller path="/boardWrite" view-name="boardWrite"/>
<mvc:view-controller path="/boardInsert" view-name="boardInsert"/>
<mvc:view-controller path="/boardretrieve" view-name="boardretrieve"/>
<mvc:view-controller path="/boardUpdate" view-name="boardUpdate"/>
<mvc:view-controller path="/mypage" view-name="mypage"/>
<mvc:view-controller path="/loginCheck/mypage" view-name="mypage"/>
<mvc:view-controller path="/resvMy" view-name="resvMy"/>
<mvc:view-controller path="/roomlist" view-name="roomlist"/>
<mvc:view-controller path="/RoomReserv" view-name="RoomReserv"/>
<mvc:view-controller path="/roomdetail" view-name="roomdetail"/>
<mvc:view-controller path="/KakaoPay" view-name="KakaoPay"/>
<mvc:view-controller path="/searchId" view-name="searchId"/>
<mvc:view-controller path="/Agree" view-name="Agree"/>
<mvc:view-controller path="/adminMember" view-name="adminMember"/>
<mvc:view-controller path="/adminHotel" view-name="adminHotel"/>
<mvc:view-controller path="/adminRoom" view-name="adminRoom"/>
<mvc:view-controller path="/notification" view-name="notification"/>
<mvc:view-controller path="/notiWrite" view-name="notiWrite"/>
<mvc:view-controller path="/notiInsert" view-name="notiInsert"/>
<mvc:view-controller path="/notiRetrieve" view-name="notiRetrieve"/>
<mvc:view-controller path="/notiUpdate" view-name="notiUpdate"/>
<mvc:view-controller path="/faqWrite" view-name="faqWrite"/>
<mvc:view-controller path="/faqInsert" view-name="faqInsert"/>
<mvc:view-controller path="/admin/update" view-name="admin/update"/>
<mvc:view-controller path="/reviewlist" view-name="reviewlist"/>
<mvc:view-controller path="/eventWrite" view-name="eventWrite"/>
<!-- web-inf 폴더는 반드시 리소스 등록 후 사용 -->
<mvc:resources location="/WEB-INF/views/styles/" mapping="/styles/**"/>
<mvc:resources location="/WEB-INF/views/assets/" mapping="/assets/**"/>
<mvc:resources location="/WEB-INF/views/images/" mapping="/images/**"/>
<mvc:resources location="/WEB-INF/views/jquery-ui-1.12.1/" mapping="/jquery-ui-1.12.1/**"/>
<mvc:resources location="/WEB-INF/views/common/" mapping="/common/**"/>
<mvc:resources location="/WEB-INF/views/hotel/" mapping="/hotel/**"/>
<mvc:resources location="/WEB-INF/views/review/" mapping="/review/**"/>
<mvc:resources location="/WEB-INF/views/pay/" mapping="/pay/**"/>
<!-- interceptor의 사용 시작 -->
<mvc:interceptors>
	<mvc:interceptor>
		<mvc:mapping path="/loginCheck/**"/>
		<mvc:exclude-mapping path="/views/**"/>
		<ref bean="loginCheckInterceptor"/>
	</mvc:interceptor>
</mvc:interceptors>
<bean id="loginCheckInterceptor" class="com.interceptor.LoginCheckInterceptor"></bean>
<!-- interceptor의 사용 끝 -->
<!-- controller 등록 부분 -->
<!-- @Controller, @Service, @Repository, @Component 자동 빈등록, @Autowired 활성화 -->
<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<property name="prefix" value="/WEB-INF/views/"></property>
	<property name="suffix" value=".jsp"></property>
	
</bean>
<context:component-scan base-package="com.*"></context:component-scan><!-- repoistory,service, controller 생성 -->
<!-- 메일 -->
<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	<property name="host" value="smtp.naver.com" />
	<property name="port" value="465" />
	<property name="username" value="" />
	<property name="password" value="" />
	<property name="defaultEncoding" value="utf-8" />
	<property name="javaMailProperties">
		<props>
		    <prop key="mail.transport.protocol">smtp</prop>
		    <prop key="mail.smtp.ssl.trust">smtp.naver.com</prop>
			<prop key="mail.smtp.ssl.enable">true</prop>
			<prop key="mail.debug">true</prop>
			<prop key="mail.smtp.starttls.enable">true</prop>
			<prop key="mail.smtp.ssl.checkserveridentity">true</prop>
			<prop key="mail.smtp.auth">true</prop>				
			<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
		</props>
	</property>
</bean>
<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<property name="maxUploadSize" value="-1"></property>
</bean>
</beans>
